{
  "lock": false,
  "nodeModulesDir": "auto",
  "tasks": {
    "init:stripe": "deno run --allow-read --allow-env --allow-net --env tasks/init_stripe.ts",
    "db:dump": "deno run --unstable-kv --allow-read --allow-env tasks/db_dump.ts",
    "db:restore": "deno run --unstable-kv --allow-read --allow-env tasks/db_restore.ts",
    "db:seed": "deno run --unstable-kv --allow-read --allow-env --allow-net tasks/db_seed.ts",
    "db:migrate": "deno run --unstable-kv --allow-read --allow-env --allow-net tasks/db_migrate.ts",
    "db:reset": "deno run --unstable-kv --allow-read --allow-env tasks/db_reset.ts",
    "start": "deno run --unstable-temporal --unstable-net --unstable-kv --unstable-http --unstable-fs --unstable-cron --unstable-broadcast-channel --unstable-worker-options -A --watch=static/,routes/ --env dev.ts",
    "test": "DENO_KV_PATH=:memory: deno test -A --parallel --unstable-temporal --unstable-net --unstable-kv --unstable-http --unstable-fs --unstable-cron --unstable-broadcast-channel --unstable-worker-options --coverage",
    "test:watch": "DENO_KV_PATH=:memory: deno test -A --watch --parallel --unstable-temporal --unstable-net --unstable-kv --unstable-http --unstable-fs --unstable-cron --unstable-broadcast-channel --unstable-worker-options",
    "check:license": "deno run --allow-read --allow-write tasks/check_license.ts",
    "check:types": "deno check **/*.ts && deno check **/*.tsx",
    "ok": "deno fmt --check && deno lint && deno task check:types && deno task test",
    "fix": "deno fmt",
    "cov:gen": "deno coverage coverage --lcov --exclude='.tsx' --output=cov.lcov",
    "update": "deno run -A -r https://fresh.deno.dev/update .",
    "build": "deno run -A --unstable-temporal --unstable-net --unstable-kv --unstable-http --unstable-fs --unstable-cron --unstable-broadcast-channel --unstable-worker-options dev.ts build",
    "preview": "deno run -A --unstable-temporal --unstable-net --unstable-kv --unstable-http --unstable-fs --unstable-cron --unstable-broadcast-channel --unstable-worker-options main.ts"
  },
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact",
    "lib": ["dom", "dom.iterable", "esnext"]
  },
  "imports": {
    "@/": "./",
    "https://deno.land/x/emoji@0.3.0/emoji.ts": "https://deno.land/x/emoji@0.3.1/emoji.ts",
    "$fresh/": "https://deno.land/x/fresh@1.7.3/",
    "$gfm": "https://deno.land/x/gfm@0.6.0/mod.ts",
    "react": "npm:@preact/compat",
    "react-dom": "npm:@preact/compat",
    "preact": "https://esm.sh/preact@10.22.0",
    "preact/": "https://esm.sh/preact@10.22.0/",
    "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.2",
    "@preact/signals": "https://esm.sh/*@preact/signals@1.2.2",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.5.1",
    "tailwindcss": "npm:tailwindcss@3.4.1",
    "tailwindcss/": "npm:/tailwindcss@3.4.1/",
    "tailwindcss/plugin": "npm:/tailwindcss@3.4.1/plugin.js",
    "std/": "https://deno.land/std@0.224.0/",
    "stripe": "npm:/stripe@13.5.0",
    "feed": "npm:/feed@4.2.2",
    "kv_oauth/": "https://deno.land/x/deno_kv_oauth@v0.10.0/",
    "tabler_icons_tsx/": "https://deno.land/x/tabler_icons_tsx@0.0.4/tsx/",
    "fresh_charts/": "https://deno.land/x/fresh_charts@0.3.1/",
    "axios-web": "https://esm.sh/axios@1.3.2?target=es2022",
    "zod": "https://esm.sh/zod@v3.22.4",
    "open-props": "https://esm.sh/open-props@1.6.20",
    "open-props/": "https://esm.sh/open-props@1.6.20/",
    "$components": "https://esm.sh/react-aria-components@1.1.1",
    "$inject-css/": "https://deno.land/x/fresh_inject_css@1.0.0/"
  },
  "exclude": ["cov/", "_fresh/", "**/_fresh/*"],
  "lint": {
    "include": [
      "components/**/*.tsx",
      "islands/**/*.tsx",
      "plugins/**/*.ts",
      "routes/**/*.ts",
      "routes/**/*.tsx",
      "tasks/**/*.ts",
      "utils/**/*.ts",
      "tailwind.config.ts",
      "main.ts",
      "fresh.config.ts",
      "dev.ts",
      "deno.json"
    ],
    "rules": {
      "tags": ["fresh", "recommended"],
      "exclude": ["react-no-danger"]
    }
  },
  "fmt": {
    "include": [
      "components/**/*.tsx",
      "islands/**/*.tsx",
      "plugins/**/*.ts",
      "routes/**/*.ts",
      "routes/**/*.tsx",
      "tasks/**/*.ts",
      "utils/**/*.ts",
      "tailwind.config.ts",
      "main.ts",
      "fresh.config.ts",
      "dev.ts",
      "deno.json"
    ],
    "useTabs": false,
    "lineWidth": 120,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": true,
    "proseWrap": "preserve"
  }
}
